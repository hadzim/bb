/**
 * THIS FILE IS GENERATED BY genTool, DO NOT CHANGE IT!!!!!
 */
#ifndef _DATA_H_
#define _DATA_H_

#include <Poco/SharedPtr.h>
#include <Poco/BasicEvent.h>
#include "TBS/Services/Types.h"
#include <string>
#include <vector>
#include <map>

namespace TBS{ namespace Services{ namespace Introspection{ class Class; struct Struct; } } } 




namespace TBS { 
	namespace BB { 
		namespace Services { 
			namespace Data { 
	   /** [interface] IDataCollector:  */
       class GEN_SERVICE_API IDataCollector {
			public:
				typedef Poco::SharedPtr <IDataCollector> Ptr;
				
				virtual ~IDataCollector(){}
				
				static std::string name(){
					static std::string n = "TBS.BB.Services.Data.DataCollector";
					return n;
				}
				static const ::TBS::Services::Introspection::Class & introspection();
				
 //methods 
				
		/** 
		  * [method] SendSensorData: 
		  * [in] std::string sensorType: 
		  * [in] std::string sensorName: 
		  * [in] std::string sensorRawName: 
		  * [in] std::string sensorUnit: 
		  * [in] std::string sensorDate: 
		  * [in] int32_t sensorStatus: 
		  * [in] double sensorValue: 
		  * [in] std::string sensorTextValue: 
		  */ 
		        virtual void SendSensorData(const std::string & sensorType, const std::string & sensorName, const std::string & sensorRawName, const std::string & sensorUnit, const std::string & sensorDate, const int32_t & sensorStatus, const double & sensorValue, const std::string & sensorTextValue) = 0;

		/** 
		  * [method] SendStatus: 
		  * [in] std::string status: 
		  */ 
		        virtual void SendStatus(const std::string & status) = 0;

		/** 
		  * [method] SendTask: 
		  * [in] std::string what: 
		  * [in] std::string params: 
		  * [in] std::string source: 
		  * [in] std::string destination: 
		  */ 
		        virtual void SendTask(const std::string & what, const std::string & params, const std::string & source, const std::string & destination) = 0;

		/** 
		  * [method] SendNotification: 
		  * [in] int32_t level: 
		  * [in] std::string source: 
		  * [in] std::string message: 
		  */ 
		        virtual void SendNotification(const int32_t & level, const std::string & source, const std::string & message) = 0;

				
 //signals 
				
				
			};
 } 
 } 
 } 
 } 


namespace TBS { 
	namespace BB { 
		namespace Services { 
			namespace Data { 
	   /** [interface] IDataDistributor:  */
       class GEN_SERVICE_API IDataDistributor {
			public:
				typedef Poco::SharedPtr <IDataDistributor> Ptr;
				
				virtual ~IDataDistributor(){}
				
				static std::string name(){
					static std::string n = "TBS.BB.Services.Data.DataDistributor";
					return n;
				}
				static const ::TBS::Services::Introspection::Class & introspection();
				
 //methods 
				
				
 //signals 
						struct SensorDataReceivedArg { 
std::string sensorType;
std::string sensorName;
std::string sensorRawName;
std::string sensorUnit;
std::string sensorDate;
int32_t sensorStatus;
double sensorValue;
std::string sensorTextValue;
};
		Poco::BasicEvent <SensorDataReceivedArg> SensorDataReceived;
		
		typedef std::string StatusReceivedArg;
		Poco::BasicEvent <StatusReceivedArg> StatusReceived;
		
		struct TaskReceivedArg { 
std::string what;
std::string params;
std::string source;
std::string destination;
};
		Poco::BasicEvent <TaskReceivedArg> TaskReceived;
		
		struct NotificationReceivedArg { 
int32_t level;
std::string source;
std::string message;
};
		Poco::BasicEvent <NotificationReceivedArg> NotificationReceived;
		

				
			};
 } 
 } 
 } 
 } 



#endif //_DATA_H_

